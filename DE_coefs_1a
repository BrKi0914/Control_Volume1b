def DE_coefs_1a(dtf,dt1mf,Dzrho,Kedz,cpave,QS,Jb,Jbn):
    for k in range(1,N-1):
        aU[k] = dtf * Kedz[k] / cpave[k-1]
        aUp[k] = dt1mf * Kedz[k] / cpave[k-1]
        aD[k] = dtf * Kedz[k+1] / cpave[k+1]
        aDp[k] = dt1mf * Kedz[k+1] / cpave[k+1]
        aP[k] = Dzrho[k] + dtf * (Kedz[k]/cpave[k] + Kedz[k+1]/cpave[k])
        aPp[k] = Dzrho[k] - dt1mf * (Kedz[k]/cpave[k] + Kedz[k+1]/cpave[k])
        b[k] = QS[k]
    k = N-1
    aU[k] = dtf * Kedz[k] / cpave[k-1]
    aUp[k] = dt1mf * Kedz[k] / cpave[k-1]
    aD[k] = 0
    aDp[k] = 0
    aP[k] = Dzrho[k] + dtf * Kedz[k]/cpave[k]
    aPp[k] = Dzrho[k] - dt1mf * Kedz[k]/cpave[k]
    b[k] = QS[k] - dtf*Jb - dt1mf*Jbn
    return aU,aP,aD,aUp,aPp,aDp,b
#-----------------------------example
import numpy as np
N = 4
aU = np.zeros(N)
aP = np.zeros(N)
aD = np.zeros(N)
aUp = np.zeros(N)
aPp = np.zeros(N)
aDp = np.zeros(N)
b = np.zeros(N)
dtf = 1
dt1mf = 3
Dzrho = np.zeros(N) + 4
Kedz = np.zeros(N) + 3
cpave = np.zeros(N) + 5
QS = np.zeros(N) + 6
Jb = 7
Jbn = 8
for k in range(1,N-1):
    aU[k] = dtf * Kedz[k] / cpave[k-1]
    aUp[k] = dt1mf * Kedz[k] / cpave[k-1]
    aD[k] = dtf * Kedz[k+1] / cpave[k+1]
    aDp[k] = dt1mf * Kedz[k+1] / cpave[k+1]
    aP[k] = Dzrho[k] + dtf * (Kedz[k]/cpave[k] + Kedz[k+1]/cpave[k])
    aPp[k] = Dzrho[k] - dt1mf * (Kedz[k]/cpave[k] + Kedz[k+1]/cpave[k])
    b[k] = QS[k]
k = N-1
aU[k] = dtf * Kedz[k] / cpave[k-1]
aUp[k] = dt1mf * Kedz[k] / cpave[k-1]
aD[k] = 0
aDp[k] = 0
aP[k] = Dzrho[k] + dtf * Kedz[k]/cpave[k]
aPp[k] = Dzrho[k] - dt1mf * Kedz[k]/cpave[k]
b[k] = QS[k] - dtf*Jb - dt1mf*Jbn
DE_coefs_1a(dtf,dt1mf,Dzrho,Kedz,cpave,QS,Jb,Jbn)
