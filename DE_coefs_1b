def DE_coefs_1b(dtf,dt1mf,DzC,Kedz,QS,qb,qbn):
    return aU,aP,aD,aUp,aPp,aDp,b
import numpy as np
N = 4
Kedz = np.zeros(N)
DzC = np.zeros(N)+4
QS = np.zeros(N)+1
qb = 5
qbn = 8
aU = np.zeros(N)
aP = np.zeros(N)
aD = np.zeros(N)
aUp = np.zeros(N)
aPp = np.zeros(N)
aDp = np.zeros(N)
b = np.zeros(N)
for k in range(1,N-1):
    aU[k] = dtf * Kedz[k]
    aUp[k] = dt1mf * Kedz[k]
    aD[k] = dtf * Kedz[k]
    aDp[k] = dt1mf * Kedz[k+1]
    aP[k] = DzC[k] + dtf * (Kedz[k] + Kedz[k+1])
    aPp[k] = DzC[k] - dt1mf * (Kedz[k] + Kedz[k+1])
    b[k] = QS[k]
k = N-1
aU[k] = dtf * Kedz[k]
aUp[k] = dt1mf * Kedz[k]
aD[k] = 0
aDp[k] = 0
aP[k] = DzC[k] + dtf * Kedz[k]
aPp[k] = DzC[k] - dt1mf * Kedz[k]
b[k] = QS[k] - dtf*qb - dt1mf*qbn

# Example of DE_coefs_1b
#dtf = 3
#dt1mf = 2
#DzC = np.zeros(N)+4
#Kedz = np.zeros(N)
#QS = np.zeros(N)+1
#qb = 5
#qbn = 8
#for k in range(1,N-1):
    #aU[k] = dtf * Kedz[k]
    #aUp[k] = dt1mf * Kedz[k]
    #aD[k] = dtf * Kedz[k]
    #aDp[k] = dt1mf * Kedz[k+1]
    #aP[k] = DzC[k] + dtf * (Kedz[k] + Kedz[k+1])
    #aPp[k] = DzC[k] - dt1mf * (Kedz[k] + Kedz[k+1])
    #b[k] = QS[k]
#k = N-1
#aU[k] = dtf * Kedz[k]
#aUp[k] = dt1mf * Kedz[k]
#aD[k] = 0
#aDp[k] = 0
#aP[k] = DzC[k] + dtf * Kedz[k]
#aPp[k] = DzC[k] - dt1mf * Kedz[k]
#b[k] = QS[k] - dtf*qb - dt1mf*qbn
#DE_coefs_1b(dtf,dt1mf,DzC,Kedz,QS,qb,qbn)
